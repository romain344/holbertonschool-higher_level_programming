The ``MyList`` module
======================

Using ``MyList``
-------------------

First import ``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

Basic usage:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test with empty list:
    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []

Test with one element:
    >>> single_list = MyList([42])
    >>> single_list.print_sorted()
    [42]

Test with negative numbers:
    >>> neg_list = MyList([-1, -5, -2, -10])
    >>> neg_list.print_sorted()
    [-10, -5, -2, -1]

Test with mixed positive and negative:
    >>> mixed_list = MyList([1, -2, 3, -4, 0])
    >>> mixed_list.print_sorted()
    [-4, -2, 0, 1, 3]

Test with duplicate numbers:
    >>> dup_list = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
    >>> dup_list.print_sorted()
    [1, 1, 2, 3, 4, 5, 5, 6, 9]

Test inheritance:
    >>> my_list = MyList([3, 1, 4])
    >>> isinstance(my_list, list)
    True
    >>> isinstance(my_list, MyList)
    True

Test list methods still work:
    >>> my_list = MyList([1, 2, 3])
    >>> my_list.append(4)
    >>> my_list.extend([5, 6])
    >>> print(my_list)
    [1, 2, 3, 4, 5, 6]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5, 6]